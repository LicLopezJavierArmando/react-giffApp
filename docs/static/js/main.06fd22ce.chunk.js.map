{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGrid","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","console","log","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAGaA,EAAc,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,cAAqB,EACVC,mBAAS,KADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,GACxBR,GAAc,SAAAS,GAAK,OAAGP,GAAH,mBAAiBO,QAMzC,SACI,uBACAC,KAAK,QACLC,MAAOT,EACPU,SAhBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIEA,EAAKC,OAJP,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACnB,MAAM,CACEC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAThC,kBAYXM,GAZW,4CAAF,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OAES,sBAAKc,UAAW,yCAAhB,UAEI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,kCAAKA,EAAL,WCLJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDb,SAACA,GAAa,IAAD,EACTd,mBACtB,CACIqB,KAAK,GACLa,SAAS,IAJkB,mBAC5BC,EAD4B,KACrBC,EADqB,KAwBnC,OAlBIC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,GACRH,EAAS,CACDf,KAAKkB,EACLL,SAAS,SAK9B,CAACpB,IAMDqB,EDfwBO,CAAa5B,GAA/Ba,EARsB,EAQ5BN,KAAca,EARc,EAQdA,QACrB,OACI,qCACI,qBAAIJ,UAAU,qCAAd,cAAqDhB,EAArD,OACCoB,GAAW,wCACR,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADHA,EAAIC,aEhBxBkB,EAAe,WAAO,IAAD,EACM3C,mBAAS,CAAC,aADhB,mBACvB4C,EADuB,KACX7C,EADW,KAK9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCf7B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.06fd22ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}  ) => {\r\n    const [inputValue, setInputValue] = useState(' ');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2 ){\r\n             setCategories(categ=>[inputValue,...categ,]);\r\n        }\r\n\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit={handlesubmit}>\r\n            <input\r\n            type=\" Text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired // haciendo referencia al paquiete que inportarmos\r\n}","\r\nexport const getGrid= async(category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=0x5nJLIHAZhqnebIv2DdKsLKJnLE5EBj`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifs=  data.map(img=>{\r\n            return{\r\n                    id: img.id,\r\n                    title :img.title,\r\n                    url: img.images?.downsized_medium.url\r\n            } \r\n        })\r\n    return gifs;\r\n    \r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {// recibo una imagen o un gif\r\n    return (\r\n        \r\n             <div className= \"card animate__animated animate__fadeIn\">\r\n                 \r\n                 <img src= {url} alt={title}/>\r\n                 <p> {title} </p>\r\n            </div>\r\n             )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    //  useEffect(()=>{\r\n    //      getGrid(category)\r\n    //      .then( setImages)  ;\r\n    //     },[category])\r\n \r\n    //getGrid();\r\n    const {data: images ,loading}= useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\"> {category} </h3>\r\n            {loading && <p>loading</p>}\r\n                <div className=\"card-grid\">          \r\n            \r\n                    {\r\n                        images.map(img=>(\r\n                            <GifGridItem\r\n                            key={img.id}\r\n                                {...img}\r\n                                />\r\n                        ))\r\n                    }\r\n                    \r\n                \r\n                </div> \r\n        </>\r\n      \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGrid } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=(category) =>{\r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[],\r\n            loading: true\r\n        });\r\n        useEffect(() => {\r\n            getGrid(category)\r\n                .then(imgs=>{\r\n                 \r\n                    console.log(imgs    )\r\n                        setstate({\r\n                                data:imgs,\r\n                                loading: false\r\n                        });    \r\n\r\n            } )\r\n           \r\n        }, [category])\r\n          //  useEffect(()=>{\r\n    //      getGrid(category)\r\n    //      .then( setImages)  ;\r\n    //     },[category])\r\n        \r\n    return state; //{data:[], loading:true}\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n//const categories= ['one puch','Samurai X','Dragon ball'];\r\n\r\n\r\nexport const GitExpertApp = () => {\r\n    const [categories, setCategories] = useState(['one puch']);\r\n  /*   const handleAdd=() =>{\r\n        setCategories(categ=>[...categ ,'Hunlt'])\r\n    } */\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                 {\r\n                    categories.map(category=>(\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                    ))\r\n                 }\r\n            </ol>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n    <GitExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}